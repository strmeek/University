# -*- coding: utf-8 -*-
"""Atividade_6_Filipe_Andrade.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yj64oxLUxiQ5-Kg6vpo0geUElHzvw6_F
"""

#Use to import pandas
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

#Use to import the file into google Colab drive
from google.colab import files 
#Use to import io, which opens the file from the Colab drive
import io

uploaded = files.upload()
arquivo = next(iter(uploaded))

gfile_name = io.StringIO(uploaded[arquivo].decode('ISO 8859-1').strip())
dados = pd.read_csv(gfile_name,sep=';')

print(dados.columns.ravel())

#Questão 1
media = dados['RESULTADO'].mean()
variancia = dados['RESULTADO'].var()
print("variancia", variancia)
desvio_padrao = dados['RESULTADO'].std()
moda = dados['RESULTADO'].mode()
print("moda", moda)

#Questão 2
resumo = dados['RESULTADO'].describe()
print(resumo)

#Questão 3
histo = pd.DataFrame(dados)
coluna = histo['INDICADOR']
histograma = sns.distplot(coluna)

#Questão 4
print("""Resposta: Não é possivel fazer um gráfico de barras Indicador x Resultado pois são dois valores QUANTITATIVOS, logo geram PONTOS no gráfico.
Para gerar gráficos de barra é necessário ter valores que possam ser contados, eu poderia criar um gráfico de barras com indicador x count por exemplo,
e eu teria o número de ocorrencias de cada indicador.
O gráfico que expõe a informação Indicador x Resultado mais claramente é o da linha abaixo:""")
grafico = sns.catplot(data=dados, x="INDICADOR", y="RESULTADO", jitter=False)

#exemplo: indicador x count
indicador_x_count = sns.catplot(data=dados, kind="count", x="INDICADOR")