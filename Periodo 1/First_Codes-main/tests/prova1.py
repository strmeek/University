# -*- coding: utf-8 -*-
"""Prova1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14EQkUAuz8cUnflRinWgjEjnmmu0LxP27
"""

#problema 1
a = 200
s = 0
while a < 1200:
  s = s + a
  a = a + 2
print(s)

#problema 2

import random as rd

lista = []
for i in range(12):
  x = rd.randint(1,100)
  lista.append(x)
lista.sort()
lim_inf = lista[4]
lim_sup = lista[-4]

def interval(lista):
  sub_lista = []
  for i in range(len(lista)):
    if lim_inf <= lista[i] <= lim_sup:
      sub_lista.append(lista[i])
  return sub_lista

intervalo = interval(lista)
print(intervalo)

#problema 3
m = 700
count = 0
while m > 0.05:
  m = m/2
  count = count + 1

print(count * 50)

#problema 4
####Corrida de Kart
####Funcionalidades:
#Nomes:
def name(line):
  names = []
  for k in range(line):
    pilot = str(input("Nome do piloto %d:  " %(k + 1)))
    names.append(pilot)
  return names

#Tempos dos corredores:
import random as rd

def laps(column):
  matrix = [0] * line
  for j in range(line):
    times = []
    for i in range(column):
      lap = rd.randint(120,180)
      times.append(lap)
    matrix[j] = times
  return matrix

####Organização:
line = int(input("Número de pilotos: "))
column = int(input("Número de voltas da corrida: "))

nomes = name(line)
matriz = laps(column)

#Todos os resultados:

ordem = []
for l in range(line):
  media = sum(matriz[l])/len(matriz[l])
  ordem.append(media)
  matriz[l].append(nomes[l])
  matriz[l].append(media)

ordem.sort()

def order(n):
  for k in range(line):
    if matriz[k][-1] == ordem[n]:
      print(matriz[k])
  return 

n = 0
while n < line:
  order(n)
  n = n + 1

#problema 5

import random as rd

lista = []
for i in range(20):
  x = rd.randint(-2,2)
  lista.append(x)

def binary(lista):
  for i in range(len(lista)):
    if lista[i] < 0:
      lista[i] = 0
    elif lista[i] > 0:
      lista[i] = 1
  return lista

sublist = binary(lista)
print(sublist)